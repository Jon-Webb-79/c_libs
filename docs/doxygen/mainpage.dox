/**
 * \mainpage C Libraries
 *
 * This library contains pre-defined data structures, random number generators, and file readers programmed
 * in the C language.  The libraries contain functions ang generic operators to simplify the user interface.
 * The generic operators do not increase memory usage or decrease execution time like traditional operators,
 * but instead feed the pre-compiler with the appropriate function definition based on data type.  This allows
 * a type generic interface.
 *
 * \section install_sec Installation
 *
 * This library has been tested on the clang 14.0.0, and the gcc 12.2.1 compilers.  Use the following
 * process to install this library
 * 1. Ensure that gcc 12.2.1 or clang 14.0.0 or later compilers are installed on your computer
 * 2. Clone the library with the following command clone `https://github.com/Jon-Webb-79/c_libs`  
 * 3. Install locally as a library with the command `xxx`
 *
 * \section files_sec Files
 *
 * This library contains the following header files and contents
 *
 * 1. swap.h
 * This header file contains functions and macros that can be used to swap data in memory.
 * This file contains the following functions.
 *
 * The library provides the following functions:
 * - `swap_char()`: Swaps two char values in memory.
 * - `swap_uchar()`: Swaps two unsinged char values in memory.
 * - `swap_short()`: Swaps two short integer values in memory.
 * - `swap_ushort()`: Swaps two unsigned short integer values in memory.
 * - `swap_int()`: Swaps two integer values in memory.
 * - `swap_uint()`: Swaps two unsigned integer values in memory.
 * - `swap_long()`: Swaps two long integer values in memory.
 * - `swap_ulong()`: Swaps two unsigned long integer values in memory.
 * - `swap_llong()`: Swaps two long long integer values in memory.
 * - `swap_ullong()`: Swaps two unsigned long long integer values in memory.
 * - `swap_float()`: Swaps two float values in memory.
 * - `swap_double()`: Swaps two double values in memory.
 * - `swap_ldouble()`: Swaps two long double values in memory.
 * - `swap_bool()`: Swaps two bool values in memory.
 *
 * This file also contains the following macros.
 * - `SWAP()`: Swaps data of any type listed aboved in a single macro.
 *
 * 2. vector.h
 * This header file contains functions and macros that can be used to instantiate and execute
 * a dynamically and statically allocated array.  \b NOTE: The contents of this file can also
 * be accessed via the data_structure.h file. The vector.h file contains the following functions.
 *
 * - `init_char_vector()`: Initializes a dynamically allocated vector of type char.
 * - `init_uchar_vector()`: Initializes a dynamically allocated vector of type unsigned char.
 * - `init_short_vector()`: Initializes a dynamically allocated vector of type short int.
 * - `init_ushort_vector()`: Initializes a dynamically allocated vector of type unsigned short int.
 * - `init_int_vector()`: Initializes a dynamically allocated vector of type int.
 * - `init_uint_vector()`: Initializes a dynamically allocated vector of type unsigned int.
 * - `init_long_vector()`: Initializes a dynamically allocated vector of type long int.
 * - `init_ulong_vector()`: Initializes a dynamically allocated vector of type unsigned long int.
 * - `init_llong_vector()`: Initializes a dynamically allocated vector of type long long int.
 * - `init_ullong_vector()`: Initializes a dynamically allocated vector of type unsigned long long int.
 * - `init_float_vector()`: Initializes a dynamically allocated vector of type float.
 * - `init_double_vector()`: Initializes a dynamically allocated vector of type double.
 * - `init_ldouble_vector()`: Initializes a dynamically allocated vector of type long double
 * - `init_bool_vector()`: Initializes a dynamically allocated vector of type bool.
 * - `init_string_vector()`: Initializes a dynamically allocated vector of type string.
 *
 * - `INIT_VECTOR()`: A macro to initialize a dynamically allocated vecotr of all data types described anove, excpet string
 *
 *
 *
 * \section license_sec License
 *
 * This library is released under the MIT License.
 */

